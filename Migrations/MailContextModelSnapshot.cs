// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PinchuckLab;

#nullable disable

namespace PinchuckLab.Migrations
{
    [DbContext(typeof(MailContext))]
    partial class MailContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PinchuckLab.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PinchuckLab.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MailBranchBranchId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MailBranchBranchId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("PinchuckLab.Models.MailBranch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchId");

                    b.ToTable("MailBranches");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            Address = "Main Street 1",
                            BranchName = "Main Branch",
                            City = "Antwerpen",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            BranchId = 2,
                            Address = "Second Street 2",
                            BranchName = "Second Branch",
                            City = "Paris",
                            PhoneNumber = "12345_6789"
                        },
                        new
                        {
                            BranchId = 3,
                            Address = "Third Street 3",
                            BranchName = "Third Branch",
                            City = "London",
                            PhoneNumber = "12345678_9"
                        });
                });

            modelBuilder.Entity("PinchuckLab.Models.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("MailBranchBranchId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceipmentId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("MailBranchBranchId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("PinchuckLab.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Ammount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Passport")
                        .IsUnique()
                        .HasFilter("[Passport] IS NOT NULL");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("PinchuckLab.Models.Employee", b =>
                {
                    b.HasOne("PinchuckLab.Models.MailBranch", null)
                        .WithMany("Employees")
                        .HasForeignKey("MailBranchBranchId");
                });

            modelBuilder.Entity("PinchuckLab.Models.Parcel", b =>
                {
                    b.HasOne("PinchuckLab.Models.Client", "Client")
                        .WithMany("Parcels")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PinchuckLab.Models.MailBranch", null)
                        .WithMany("Parcels")
                        .HasForeignKey("MailBranchBranchId");

                    b.HasOne("PinchuckLab.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PinchuckLab.Models.Payment", b =>
                {
                    b.HasOne("PinchuckLab.Models.Client", "Client")
                        .WithOne("Payment")
                        .HasForeignKey("PinchuckLab.Models.Payment", "Passport")
                        .HasPrincipalKey("PinchuckLab.Models.Client", "Passport");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("PinchuckLab.Models.Client", b =>
                {
                    b.Navigation("Parcels");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PinchuckLab.Models.MailBranch", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
